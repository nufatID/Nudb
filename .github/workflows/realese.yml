name: Auto Release Nudb Client

on:
  push:
    branches: [ "main" ]

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install PHP Dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Prepare dist folder
        run: |
          mkdir -p dist
          cp src/Nudb.php dist/Nudb.php
          cp js/db.js dist/db.js
          npm install -g terser
          terser js/db.js -o dist/db.min.js --compress --mangle

      - name: Get latest tag and generate new version
        id: get_version
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*" 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          if [[ $LATEST_TAG =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=$(( ${BASH_REMATCH[3]} + 1 ))
            NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          else
            NEW_VERSION="v1.0.0"
          fi
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.new_version }}
          name: "Nudb Client Release ${{ env.new_version }}"
          body: |
            Auto-generated release for Nudb PHP client.
            Version: ${{ env.new_version }}
          files: dist/*

      - name: Notify Packagist
        run: |
          curl -X POST https://packagist.org/api/update-package \
            -d '{"repository":{"url":"https://github.com/YOUR_USERNAME/YOUR_REPO"}}' \
            -H "Content-Type: application/json" \
            -u "${{ secrets.PACKAGIST_USERNAME }}:${{ secrets.PACKAGIST_TOKEN }}"